--- tests/Foundation/FoundationProviderRepositoryTest.php	2019-08-25 22:50:51.469050100 +0200
+++ tests/Foundation/FoundationProviderRepositoryTest2.php	2019-08-25 22:55:33.559565900 +0200
@@ -43,7 +43,7 @@
         $repo->shouldReceive('shouldRecompile')->once()->andReturn(true);
 
         // foo mock is just a deferred provider
-        $repo->shouldReceive('createProvider')->once()->with('foo')->andReturn($fooMock = m::mock(stdClass::class));
+        $repo->shouldReceive('createProvider')->once()->with('foo')->andReturn($fooMock = m::mock(\stdClass::class));
         $fooMock->shouldReceive('isDeferred')->once()->andReturn(true);
         $fooMock->shouldReceive('provides')->once()->andReturn(['foo.provides1', 'foo.provides2']);
         $fooMock->shouldReceive('when')->once()->andReturn([]);
